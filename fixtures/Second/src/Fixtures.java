
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Erdenay
 */
public class Fixtures extends javax.swing.JFrame {

    /**
     * Creates new form Fixtures
     */
    public Fixtures() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        textArea_1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fikstür Oluşturma Programı");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImages(null);
        setType(java.awt.Window.Type.UTILITY);

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        textArea_1.setEditable(false);
        textArea_1.setColumns(20);
        textArea_1.setRows(5);
        jScrollPane2.setViewportView(textArea_1);

        jButton1.setText("Takımları Al");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Fikstür Yap");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Çıkış");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(31, 31, 31)
                .addComponent(jButton3)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
	public static Integer[] places;
    public static ArrayList<String> teamNames;
    public static int get = 0;

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        System.exit(1);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        PrintWriter writerp;
        try {
            writerp = new PrintWriter("C:/Users/Erdenay/Yeni klasör/Yeni klasör/Project2/src/deneme2.txt");
            writerp.print("");
            writerp.close();
        } catch (FileNotFoundException e1) {
            e1.printStackTrace();
        }

        String first = textArea.getText();

        try {
            BufferedWriter writer = new BufferedWriter(new FileWriter(
                    new File("C:/Users/Erdenay/Yeni klasör/Yeni klasör/Project2/src/deneme2.txt"), true));
            writer.write(first);
            writer.newLine();
            writer.close();

        } catch (IOException E) {

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        textArea_1.setText(null);
        textArea.setText(null);
        teamNames = new ArrayList<String>();
        try (BufferedReader br = new BufferedReader(
                new FileReader("C:/Users/Erdenay/Yeni klasör/Yeni klasör/Project2/src/deneme2.txt"))) {
            String sCurrentLine;
            while ((sCurrentLine = br.readLine()) != null) {
                teamNames.add(sCurrentLine);
            }
            indexFunction();
            for (int i = 0; i < teamNames.size() - 1; i++) {

                if (i % 2 == 0) {
                    Weeks(2);
                } else {
                    Weeks(1);
                }
                WeekUp();
            }
            get = 0;
        } catch (IOException e1) {
            e1.printStackTrace();
        }
    }
    private void WeekUp() {
        for (int k = 0; k < places.length; k++) {
            places[k] = (places[k] + 1) % (teamNames.size());
            places[k] = (places[k] == 0) ? 1 : places[k];
        }
    }
    private void Weeks(int time) {
        get++;
        textArea_1.append(get + "." + "Hafta Maçları"+"\n");
        for (int i = 0; i < teamNames.size() / 2; i++) {
            if (i == 0) {
                if (time % 2 == 0) {
                    textArea_1.append(teamNames.get(places[i % 2]) + " < ----vs.---- > " + teamNames.get(0) + "\n");
                }
                if (time % 2 == 1) {
                    textArea_1.append(teamNames.get(0) + " < ----vs.---- > " + teamNames.get(places[i % 2]) + "\n");
                }
            } else {
                if (i % 2 == 0 && teamNames.size() / 2 != i) {
                    textArea_1.append(teamNames.get(places[i]) + " < ----vs.---- > " +
                            teamNames.get(places[places.length - i]) + "\n");
                }
                if (i % 2 == 1 && teamNames.size() / 2 != i) {
                    textArea_1.append(teamNames.get(places[places.length - i]) +
                            " < ----vs.---- > " + teamNames.get(places[i]) + "\n");

                } else if (i % 2 == 1) {
                    textArea_1.append(teamNames.get(places[i]) + " < ----vs.---- > " +
                            teamNames.get(places[places.length - i]) + "\n");
                }
            }
        }
        textArea_1.append("\n");
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fixtures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fixtures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fixtures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fixtures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fixtures().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea textArea;
    private javax.swing.JTextArea textArea_1;
    // End of variables declaration//GEN-END:variables

    private void indexFunction() {
        places = new Integer[teamNames.size() - 1];
        for (int i = 1; i < teamNames.size(); i++) {
            places[i - 1] = i;
        }
    }
}
